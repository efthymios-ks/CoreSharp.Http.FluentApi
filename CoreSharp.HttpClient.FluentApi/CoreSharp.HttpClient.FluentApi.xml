<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoreSharp.HttpClient.FluentApi</name>
    </assembly>
    <members>
        <member name="M:CoreSharp.HttpClient.FluentApi.Concrete.ContentMethod.ToStreamContent(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Int32)">
            <summary>
            Build <see cref="T:System.Net.Http.StreamContent" /> from given item.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.ICacheQueryResponse`1.Cache(System.TimeSpan)">
            <summary>
            Enable in-memory, client-side response caching.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.String)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.String,System.String)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.String,System.String)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.String,System.Text.Encoding,System.String)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.String,System.Text.Encoding,System.String)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.Net.Http.HttpContent)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.Object)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.Object,Newtonsoft.Json.JsonSerializerSettings)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.Object,Newtonsoft.Json.JsonSerializerSettings)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.Net.Http.HttpContent)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IContentMethod.Content(System.Net.Http.HttpContent)">
            <summary>
            Sets <see cref="P:System.Net.Http.HttpRequestMessage.Content"/>.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IJsonQueryResponse`1.Cache(System.TimeSpan)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.ICacheQueryResponse`1.Cache(System.TimeSpan)"/>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IJsonQueryResponse`1.SendAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IJsonResponse`1.SendAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IJsonResponse`1.SendAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.SendAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.SendAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.Json``1(Newtonsoft.Json.JsonSerializerSettings)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.Json``1(Newtonsoft.Json.JsonSerializerSettings)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.Json``1">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.Json``1(System.Func{System.IO.Stream,``0})" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.Json``1(System.Func{System.IO.Stream,``0})">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.Json``1(System.Func{System.IO.Stream,``0})" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.Json``1(System.Func{System.String,``0})">
            <summary>
            Treat <see cref="P:System.Net.Http.HttpResponseMessage.Content"/> as json
            and convert to strongly-typed object.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Query``1(``0)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Query(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Query(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Query(System.String,System.Object)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Query(System.String,System.Object)">
            <summary>
            Define query parameter.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Json``1">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Json``1(Newtonsoft.Json.JsonSerializerSettings)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Json``1(Newtonsoft.Json.JsonSerializerSettings)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Json``1(System.Func{System.IO.Stream,``0})" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Json``1(System.Func{System.String,``0})">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Json``1(System.Func{System.IO.Stream,``0})" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IQueryMethod.Json``1(System.Func{System.IO.Stream,``0})">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.Json``1(System.Func{System.IO.Stream,``0})" />
        </member>
        <member name="P:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.HttpClient">
            <inheritdoc cref="T:System.Net.Http.HttpClient" />
        </member>
        <member name="P:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.CompletionOptionInternal">
            <inheritdoc cref="T:System.Net.Http.HttpCompletionOption"/>
        </member>
        <member name="P:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.HeadersInternal">
            <inheritdoc cref="P:System.Net.Http.HttpRequestMessage.Headers" />
        </member>
        <member name="P:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.ThrowOnError">
            <summary>
            Whether the interface throws an <see cref="T:CoreSharp.Models.HttpResponseException"/>
            or not on not successful requests using <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode"/>.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Headers(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Header(System.String,System.String)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Header(System.String,System.String)">
            <inheritdoc cref="P:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.HeadersInternal" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Accept(System.String)">
            <inheritdoc cref="F:System.Net.HttpRequestHeader.Accept" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.AcceptJson">
            <inheritdoc cref="F:System.Net.HttpRequestHeader.Accept" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.AcceptXml">
            <inheritdoc cref="F:System.Net.HttpRequestHeader.Accept" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Authorization(System.String)">
            <inheritdoc cref="F:System.Net.HttpRequestHeader.Authorization" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.IgnoreError">
            <inheritdoc cref="P:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.ThrowOnError" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.CompletionOption(System.Net.Http.HttpCompletionOption)">
            <inheritdoc cref="P:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.CompletionOptionInternal" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String,System.Int32)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String,System.Int64)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String,System.Guid)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String,System.String)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String)" />
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRequest.Route(System.String)">
            <summary>
            Add resource route to request.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRoute.Get">
            <summary>
            Set request to <see cref="P:System.Net.Http.HttpMethod.Get"/>.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRoute.Post">
            <summary>
            Set request to <see cref="P:System.Net.Http.HttpMethod.Post"/>.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRoute.Put">
            <summary>
            Set request to <see cref="P:System.Net.Http.HttpMethod.Put"/>.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRoute.Patch">
            <summary>
            Set request to <see cref="P:System.Net.Http.HttpMethod.Patch"/>.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Contracts.IRoute.Delete">
            <summary>
            Set request to <see cref="P:System.Net.Http.HttpMethod.Delete"/>.
            </summary>
        </member>
        <member name="T:CoreSharp.HttpClient.FluentApi.Extensions.HttpClientExtensions">
            <summary>
            <see cref="N:CoreSharp.HttpClient"/> extensions.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Extensions.HttpClientExtensions.Request(System.Net.Http.HttpClient)">
            <summary>
            Start a chained configuration for a new http request.
            </summary>
        </member>
        <member name="T:CoreSharp.HttpClient.FluentApi.HttpMethodX">
            <summary>
            <see cref="T:System.Net.Http.HttpMethod"/> utilities.
            </summary>
        </member>
        <member name="T:CoreSharp.HttpClient.FluentApi.Utilities.IJsonResponseX">
            <summary>
            <see cref="T:CoreSharp.HttpClient.FluentApi.Contracts.IJsonQueryResponse`1"/> utilities.
            </summary>
        </member>
        <member name="M:CoreSharp.HttpClient.FluentApi.Utilities.IJsonResponseX.SendAsync``1(CoreSharp.HttpClient.FluentApi.Contracts.IJsonResponse{``0},System.Threading.CancellationToken)">
            <inheritdoc cref="M:CoreSharp.HttpClient.FluentApi.Contracts.IMethod.SendAsync(System.Threading.CancellationToken)"/>
        </member>
    </members>
</doc>
